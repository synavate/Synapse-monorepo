#### ONLY FOR POETRY FOR PY 
#### AND NPM FOR TYPESCRIPT

name: Code Quality Checks

on:
  push:
    branches:
      - develop
    paths:  
      - '**.ts'
      - '**.py'
      - '**.tsx'
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  python-lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      
      - name: Install Poetry 
        uses: snok/install-poetry@v1

      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Install pip dependencies
        run: |
          poetry export -f requirements.txt --output requirements.txt
          pip install -r requirements.txt
          pip --upgrade pip
          pip install pylint

      - name: Lint with pylint
        run: pylint ../backend/**/*.py ../shared/DataPipelineService/**/*.py ../shared/OpticNerveObservability/**/*.py 

  typescript-lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.0'
          cache: 'npm'
      #Compiles ts into js
  tsc:
    name: tsc
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: install node v12
      uses: actions/setup-node@v1
      with:
        node-version: 20.11.0
    - name: npm install
      run: npm install
    
    - name: tsc
      uses: icrawl/action-tsc@v1

    - name: Install dependencies
      run: npm ci

    - name: Lint with ESLint
      run: npx eslint ../frontend/**/*.ts" ../backend/**/*.ts libs/shared/**/*.ts

  check-quality:
    needs: [python-lint, typescript-lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Datadog Static Analyzer
        uses: DataDog/datadog-static-analyzer-github-action@v1
        with:
          dd_app_key: ${{ secrets.DD_APP_KEY }}
          dd_api_key: ${{ secrets.DD_API_KEY }}
          dd_service: "my-service"
          dd_env: "ci"
          cpu_count: 2
          enable_performance_statistics: false

